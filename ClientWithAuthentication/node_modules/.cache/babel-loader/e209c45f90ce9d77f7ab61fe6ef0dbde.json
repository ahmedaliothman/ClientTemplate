{"ast":null,"code":"var _jsxFileName = \"/home/alipc/Downloads/react_aspnet/react-redux-saga-jwt-auth-aspnet-master/client/src/components/Register.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Constants } from \"../constants\";\nexport const Register = () => {\n  let history = useHistory();\n  let dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    setError\n  } = useForm();\n\n  let submitData = data => {\n    dispatch({\n      type: Constants.REGISTER_REQUEST,\n      payload: data\n    });\n  };\n\n  const onSubmit = data => {\n    if (data.password != data.confirmpassword) {\n      setError(\"password\", \"notMatch\", \"Password and Confirm Password are mismatched\");\n      return;\n    }\n\n    submitData(data);\n  };\n\n  const userContext = useSelector(state => {\n    return state.userContext;\n  });\n  let shouldRedirect = userContext.isAuthenticated || userContext.isRegistered;\n\n  if (userContext.isRegistered) {\n    history.push('/');\n  }\n\n  if (!userContext.isRegistered && userContext.error) {\n    console.log(userContext.error);\n  }\n\n  return shouldRedirect ? /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-md-offset-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Login\"), userContext.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger  alert-dismissible fade show\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, userContext.error.message, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"alert\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"form\", {\n    name: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"email\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, errors.email && 'Email is required')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Phone\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"phone\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, errors.phone && 'Phone is required')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 51\n    }\n  }, errors.password.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmpassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Confirm password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    name: \"confirmpassword\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, errors.confirmpassword && 'Confirm password is required')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  })))));\n};","map":{"version":3,"sources":["/home/alipc/Downloads/react_aspnet/react-redux-saga-jwt-auth-aspnet-master/client/src/components/Register.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","Redirect","useRouteMatch","useParams","useHistory","useForm","useSelector","useDispatch","Constants","Register","history","dispatch","register","handleSubmit","watch","errors","setError","submitData","data","type","REGISTER_REQUEST","payload","onSubmit","password","confirmpassword","userContext","state","shouldRedirect","isAuthenticated","isRegistered","push","error","console","log","pathname","message","required","email","phone"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Constants } from \"../constants\";\n\nexport const Register = () => {\n    let history = useHistory();\n    let dispatch = useDispatch();\n    const { register, handleSubmit, watch, errors, setError } = useForm();\n\n    let submitData = (data) => {\n        dispatch({\n            type: Constants.REGISTER_REQUEST, payload: data\n        });\n    }\n\n    const onSubmit = data => {\n        if (data.password != data.confirmpassword) {\n            setError(\"password\", \"notMatch\", \"Password and Confirm Password are mismatched\");\n            return;\n        }\n\n        submitData(data);\n    };\n\n    const userContext = useSelector(state => {\n        return state.userContext;\n    });\n\n    let shouldRedirect = userContext.isAuthenticated || userContext.isRegistered;\n    if (userContext.isRegistered) {\n        history.push('/');\n    }\n\n    if (!userContext.isRegistered && userContext.error) {\n        console.log(userContext.error);\n    }\n\n    return (shouldRedirect) ? <Redirect to={{ pathname: '/' }} /> :\n        <>\n            <div className=\"col-md-6 col-md-offset-3\">\n                <h2>Login</h2>\n                {userContext.error &&\n                    <div className=\"alert alert-danger  alert-dismissible fade show\" role=\"alert\">\n                        {userContext.error.message}\n                        <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                }\n                <form name=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"text\" className=\"form-control\" name=\"email\" ref={register({ required: true })} />\n                        <span>{errors.email && 'Email is required'}</span>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"phone\">Phone</label>\n                        <input type=\"text\" className=\"form-control\" name=\"phone\" ref={register({ required: true })} />\n                        <span>{errors.phone && 'Phone is required'}</span>\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"password\" ref={register({ required: true })} />\n                        <span>{errors.password && <p>{errors.password.message}</p>}</span>\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor=\"confirmpassword\">Confirm password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"confirmpassword\" ref={register({ required: true })} />\n                        <span>{errors.confirmpassword && 'Confirm password is required'}</span>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        </>;\n};"]},"metadata":{},"sourceType":"module"}