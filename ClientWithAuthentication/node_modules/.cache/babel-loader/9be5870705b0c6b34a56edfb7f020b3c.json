{"ast":null,"code":"var _jsxFileName = \"/home/alipc/Downloads/react_aspnet/react-redux-saga-jwt-auth-aspnet-master/client/src/components/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Constants } from \"../constants\";\nexport const Login = () => {\n  let history = useHistory();\n  let dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  let submitData = data => {\n    dispatch({\n      type: Constants.LOGIN_REQUEST,\n      payload: data\n    });\n    history.push('/');\n  };\n\n  const onSubmit = data => {\n    submitData(data);\n  };\n\n  const userContext = useSelector(state => {\n    return state.userContext;\n  });\n  return userContext.isAuthenticated ? /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 44\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-md-offset-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    name: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"username\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, errors.username && 'Username is required')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, errors.password && 'Password is required')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  })))));\n};","map":{"version":3,"sources":["/home/alipc/Downloads/react_aspnet/react-redux-saga-jwt-auth-aspnet-master/client/src/components/Login.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","Redirect","useRouteMatch","useParams","useHistory","useForm","useSelector","useDispatch","Constants","Login","history","dispatch","register","handleSubmit","watch","errors","submitData","data","type","LOGIN_REQUEST","payload","push","onSubmit","userContext","state","isAuthenticated","pathname","required","username","password"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Constants } from \"../constants\";\n\nexport const Login = () => {\n    let history = useHistory();\n    let dispatch = useDispatch();\n    const { register, handleSubmit, watch, errors } = useForm();\n\n    let submitData = (data) => {\n        dispatch({\n            type: Constants.LOGIN_REQUEST, payload: data\n        })\n        history.push('/');\n    }\n\n    const onSubmit = data => {\n        submitData(data);\n    };\n\n    const userContext = useSelector(state => {\n        return state.userContext;\n    });\n\n    return (userContext.isAuthenticated) ? <Redirect to={{ pathname: '/' }} /> :\n        <>\n            <div className=\"col-md-6 col-md-offset-3\">\n                <h2>Login</h2>\n                <form name=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input type=\"text\" className=\"form-control\" name=\"username\" ref={register({ required: true })} />\n                        <span>{errors.username && 'Username is required'}</span>\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"password\" ref={register({ required: true })} />\n                        <span>{errors.password && 'Password is required'}</span>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        </>;\n};"]},"metadata":{},"sourceType":"module"}