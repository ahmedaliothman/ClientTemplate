{"ast":null,"code":"var _jsxFileName = \"/home/alipc/Downloads/react_aspnet/react-redux-saga-jwt-auth-aspnet-master/client/src/components/Posts.js\";\nimport React, { useState, useEffect } from 'react'; //import './App.css';\n\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nexport const Home = () => {\n  return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 37\n    }\n  }, \"Hello. You are in Home\");\n};\nexport const PostCreate = () => {\n  let history = useHistory();\n  let dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  const [location, setLocation] = useState({});\n\n  function success(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude; //location = { latitude, longitude };  \n\n    setLocation({\n      latitude,\n      longitude\n    });\n  }\n\n  function error() {\n    console.error('Unable to retrieve your location');\n  }\n\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }\n\n  let saveData = data => {\n    dispatch({\n      type: \"ADD_POST\",\n      payload: data\n    });\n    history.push('/posts');\n  };\n\n  const onSubmit = data => {\n    let payload = { ...data,\n      lat: location.latitude.toString(),\n      long: location.longitude.toString()\n    };\n    saveData(payload);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Create new Post\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Location: \", location.latitude, \", \", location.longitude), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Title\",\n    name: \"title\",\n    ref: register({\n      required: true\n    }),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, errors.title && 'Title is required')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Summary\",\n    name: \"emText\",\n    ref: register({\n      required: true,\n      maxLength: 100\n    }),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"articleText\",\n    ref: register({\n      required: true\n    }),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"url\",\n    placeholder: \"Image URL\",\n    name: \"imgUrl\",\n    ref: register({\n      required: true\n    }),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })));\n};\nexport const PostEdit = props => {\n  let history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  let {\n    id\n  } = useParams();\n  let dispatch = useDispatch();\n  const [location, setLocation] = useState({});\n\n  function success(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude; //location = { latitude, longitude };  \n\n    setLocation({\n      latitude,\n      longitude\n    });\n  }\n\n  function error() {\n    console.error('Unable to retrieve your location');\n  }\n\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }\n\n  let fetchData = id => {\n    dispatch({\n      type: \"FETCH_POST_DETAIL\",\n      payload: id\n    });\n  };\n\n  useEffect(() => {\n    fetchData(id);\n  }, [id]);\n  const post = useSelector(state => {\n    return state.posts.selectedPost;\n  });\n\n  let updateData = data => {\n    const payload = { ...data,\n      id,\n      lat: location.latitude.toString(),\n      long: location.longitude.toString()\n    };\n    dispatch({\n      type: \"EDIT_POST\",\n      payload: payload\n    });\n    history.push('/posts');\n  };\n\n  const onSubmit = data => {\n    updateData(data);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Update new Post\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Location: \", location.latitude, \", \", location.longitude), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Title\",\n    name: \"title\",\n    defaultValue: post.title,\n    ref: register({\n      required: true\n    }),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, errors.title && 'Title is required')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Summary\",\n    name: \"emText\",\n    defaultValue: post.emText,\n    ref: register({\n      required: true,\n      maxLength: 100\n    }),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"articleText\",\n    defaultValue: post.articleText,\n    ref: register({\n      required: true\n    }),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"url\",\n    placeholder: \"Image URL\",\n    name: \"imgUrl\",\n    defaultValue: post.imgUrl,\n    ref: register({\n      required: true\n    }),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })));\n};\nexport const PostDelete = props => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  let dispatch = useDispatch();\n\n  let fetchData = id => {\n    dispatch({\n      type: \"FETCH_POST_DETAIL\",\n      payload: id\n    });\n  };\n\n  useEffect(() => {\n    fetchData(id);\n  }, [id]);\n  const post = useSelector(state => {\n    return state.posts.selectedPost;\n  });\n\n  let deleteData = () => {\n    dispatch({\n      type: \"DELETE_POST\",\n      payload: id\n    });\n    history.push('/posts');\n  };\n\n  const onSubmit = data => {\n    deleteData();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, \"Delete Post\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, post.title), /*#__PURE__*/React.createElement(\"img\", {\n    src: post.imgUrl,\n    style: {\n      height: \"50px\",\n      width: \"50px\"\n    },\n    alt: \"post img\",\n    className: \"pull-left thumb margin10 img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 18\n    }\n  }, post.articleText)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    value: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  })));\n};\nexport const PostSummary = post => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    align: \"left\",\n    className: \"col-md-10 blogShort\",\n    id: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, post.title), /*#__PURE__*/React.createElement(\"img\", {\n    src: post.imgUrl,\n    style: {\n      height: \"50px\",\n      width: \"50px\"\n    },\n    alt: \"post img\",\n    className: \"pull-left thumb margin10 img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, post.emText), /*#__PURE__*/React.createElement(Link, {\n    to: location => `/post-detail/${post.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, \"Detail\"), \" \\xA0\", /*#__PURE__*/React.createElement(Link, {\n    to: location => `/post-edit/${post.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, \"Edit\"), \" \\xA0\", /*#__PURE__*/React.createElement(Link, {\n    to: location => `/post-delete/${post.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, \"Delete\"), \" \\xA0\");\n};\nexport const Comments = props => {\n  let {\n    id\n  } = useParams();\n  let dispatch = useDispatch();\n  const comments = useSelector(state => {\n    return state.posts.selectedComments;\n  });\n\n  let fetchData = () => {\n    dispatch({\n      type: \"FETCH_COMMENTS\",\n      payload: id\n    });\n  };\n\n  useEffect(() => {\n    fetchData(id);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, \"Comments count: \", comments.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, comments.map(comment => {\n    let date = comment.date;\n\n    if (date) {\n      let d = new Date(date.toString());\n      date = d.toDateString();\n    } else date = 'No Date';\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel panel-default\",\n      key: comment.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 23\n      }\n    }, comment.body, \" [\", date, \"]\")));\n  })))));\n};\nexport const CommentCreate = () => {\n  let history = useHistory();\n  let dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  let {\n    id\n  } = useParams();\n\n  let saveData = data => {\n    let comment = {\n      body: data.title,\n      date: new Date()\n    };\n    dispatch({\n      type: \"ADD_COMMENT\",\n      payload: {\n        postId: id,\n        data: comment\n      }\n    });\n    history.goBack();\n  };\n\n  const onSubmit = data => {\n    saveData(data);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-area no-padding blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Write your comment here\",\n    name: \"title\",\n    ref: register({\n      required: true\n    }),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  })))))));\n};\nexport const PostDetail = props => {\n  let {\n    id\n  } = useParams();\n  let dispatch = useDispatch();\n\n  let fetchData = id => {\n    dispatch({\n      type: \"FETCH_POST_DETAIL\",\n      payload: id\n    });\n  };\n\n  useEffect(() => {\n    fetchData(id);\n  }, []);\n  const post = useSelector(state => {\n    return state.posts.selectedPost;\n  });\n  let match = useRouteMatch();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    align: \"left\",\n    className: \"col-md-10 blogShort\",\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, post.title), /*#__PURE__*/React.createElement(\"img\", {\n    src: post.imgUrl,\n    style: {\n      height: \"50px\",\n      width: \"50px\"\n    },\n    alt: \"post img\",\n    className: \"pull-left thumb margin10 img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 18\n    }\n  }, post.articleText)), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"btn btn-blog pull-right marginBottom10\",\n    href: post.readMoreUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  }, \"READ MORE\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"btn btn-blog pull-right\",\n    to: `${match.url}/comments`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }, \"Show comments\"), \" \\xA0\", /*#__PURE__*/React.createElement(Link, {\n    className: \"btn btn-blog pull-right\",\n    to: `${match.url}/add-comment`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }, \"Add comment\"), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/comments`,\n    component: Comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/add-comment`,\n    component: CommentCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }))));\n};\nexport const Posts = () => {\n  let dispatch = useDispatch();\n  const posts = useSelector(state => {\n    return state.posts.postList;\n  });\n\n  let fetchData = () => {\n    dispatch({\n      type: \"FETCH_POSTS\"\n    });\n    dispatch({\n      type: \"CLEAR_SELECTION\"\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"blog\",\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }\n  }, posts.map(p => /*#__PURE__*/React.createElement(PostSummary, Object.assign({}, p, {\n    key: p.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 26\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 gap10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/home/alipc/Downloads/react_aspnet/react-redux-saga-jwt-auth-aspnet-master/client/src/components/Posts.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","useRouteMatch","useParams","useHistory","useForm","useSelector","useDispatch","Home","PostCreate","history","dispatch","register","handleSubmit","watch","errors","location","setLocation","success","position","latitude","coords","longitude","error","console","navigator","geolocation","getCurrentPosition","saveData","data","type","payload","push","onSubmit","lat","toString","long","required","title","maxLength","PostEdit","props","id","fetchData","post","state","posts","selectedPost","updateData","emText","articleText","imgUrl","PostDelete","deleteData","height","width","PostSummary","Comments","comments","selectedComments","length","map","comment","date","d","Date","toDateString","body","CommentCreate","postId","goBack","PostDetail","match","readMoreUrl","url","path","Posts","postList","p"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n//import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const Home = () => { return (<h2>Hello. You are in Home</h2>) };\n\nexport const PostCreate = () => {\n  let history = useHistory();\n  let dispatch = useDispatch();\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  const [location, setLocation] = useState({});\n\n  function success(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    //location = { latitude, longitude };  \n    setLocation({ latitude, longitude });\n  }\n\n  function error() {\n    console.error('Unable to retrieve your location');\n  }\n\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }\n\n  let saveData = (data) => {\n    dispatch({\n      type: \"ADD_POST\", payload: data\n    })\n\n    history.push('/posts');\n  }\n\n  const onSubmit = data => {\n    let payload = { ...data, lat: location.latitude.toString(), long: location.longitude.toString() };\n    saveData(payload);\n  };\n\n  return (\n    <>\n      <h2>Create new Post</h2>\n      <h4>Location: {location.latitude}, {location.longitude}</h4>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-group input-group\">\n          <input type=\"text\" placeholder=\"Title\" name=\"title\" ref={register({ required: true })} className=\"form-control\" />\n          <span>{errors.title && 'Title is required'}</span>\n        </div>\n        <div className=\"form-group input-group\">\n          <input type=\"text\" placeholder=\"Summary\" name=\"emText\" ref={register({ required: true, maxLength: 100 })} className=\"form-control\" />\n        </div>\n        <div className=\"form-group input-group\">\n          <textarea name=\"articleText\" ref={register({ required: true })} className=\"form-control\" />\n        </div>\n        <div className=\"form-group input-group\">\n          <input type=\"url\" placeholder=\"Image URL\" name=\"imgUrl\" ref={register({ required: true })} className=\"form-control\" />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary btn-block\" />\n      </form>\n    </>\n  )\n};\n\nexport const PostEdit = (props) => {\n  let history = useHistory();\n  const { register, handleSubmit, watch, errors } = useForm();\n  let { id } = useParams();\n  let dispatch = useDispatch();\n\n  const [location, setLocation] = useState({});\n\n  function success(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    //location = { latitude, longitude };  \n    setLocation({ latitude, longitude });\n  }\n\n  function error() {\n    console.error('Unable to retrieve your location');\n  }\n\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }\n\n  let fetchData = (id) => {\n    dispatch({ type: \"FETCH_POST_DETAIL\", payload: id });\n  }\n\n  useEffect(() => {\n    fetchData(id);\n  }, [id])\n\n  const post = useSelector(state => {\n    return state.posts.selectedPost;\n  });\n\n  let updateData = (data) => {\n    const payload = { ...data, id, lat: location.latitude.toString(), long: location.longitude.toString() };\n    dispatch({ type: \"EDIT_POST\", payload: payload });\n    history.push('/posts');\n  }\n\n  const onSubmit = data => {\n    updateData(data);\n  };\n\n  return (\n    <>\n      <h2>Update new Post</h2>\n      <h4>Location: {location.latitude}, {location.longitude}</h4>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-group input-group\">\n          <input type=\"text\" placeholder=\"Title\" name=\"title\" defaultValue={post.title} ref={register({ required: true })} className=\"form-control\" />\n          <span>{errors.title && 'Title is required'}</span>\n        </div>\n        <div className=\"form-group input-group\">\n          <input type=\"text\" placeholder=\"Summary\" name=\"emText\" defaultValue={post.emText} ref={register({ required: true, maxLength: 100 })} className=\"form-control\" />\n        </div>\n        <div className=\"form-group input-group\">\n          <textarea name=\"articleText\" defaultValue={post.articleText} ref={register({ required: true })} className=\"form-control\" />\n        </div>\n        <div className=\"form-group input-group\">\n          <input type=\"url\" placeholder=\"Image URL\" name=\"imgUrl\" defaultValue={post.imgUrl} ref={register({ required: true })} className=\"form-control\" />\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary btn-block\" />\n      </form>\n    </>\n  )\n};\n\nexport const PostDelete = (props) => {\n  const { register, handleSubmit, watch, errors } = useForm();\n  let { id } = useParams();\n  let history = useHistory();\n  let dispatch = useDispatch();\n\n  let fetchData = (id) => {\n    dispatch({ type: \"FETCH_POST_DETAIL\", payload: id });\n  }\n\n  useEffect(() => {\n    fetchData(id);\n  }, [id])\n\n  const post = useSelector(state => {\n    return state.posts.selectedPost;\n  });\n\n\n  let deleteData = () => {\n    dispatch({ type: \"DELETE_POST\", payload: id });\n    history.push('/posts');\n  }\n\n  const onSubmit = data => {\n    deleteData();\n  };\n\n  return (\n    <>\n      <h2>Delete Post</h2>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h2>{post.title}</h2>\n        <img src={post.imgUrl} style={{ height: \"50px\", width: \"50px\" }} alt=\"post img\" className=\"pull-left thumb margin10 img-thumbnail\"></img>\n        <article><p>{post.articleText}</p></article>\n        <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Delete\" />\n      </form>\n    </>\n  )\n};\n\nexport const PostSummary = (post) => {\n  return (\n    <div align=\"left\" className=\"col-md-10 blogShort\" id={post.id}>\n      <h3>{post.title}</h3>\n      <img src={post.imgUrl} style={{ height: \"50px\", width: \"50px\" }} alt=\"post img\" className=\"pull-left thumb margin10 img-thumbnail\"></img>\n      <p>{post.emText}</p>\n      <Link to={location => `/post-detail/${post.id}`}>Detail</Link> &nbsp;\n      <Link to={location => `/post-edit/${post.id}`}>Edit</Link> &nbsp;\n      <Link to={location => `/post-delete/${post.id}`}>Delete</Link> &nbsp;\n    </div>\n  )\n}\n\nexport const Comments = (props) => {\n\n  let { id } = useParams();\n  let dispatch = useDispatch();\n\n  const comments = useSelector(state => {\n    return state.posts.selectedComments;\n  });\n\n  let fetchData = () => {\n    dispatch({\n      type: \"FETCH_COMMENTS\", payload: id,\n    })\n  }\n\n  useEffect(() => {\n    fetchData(id);\n  }, [])\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">Comments count: {comments.length}</div>\n          <div className=\"col-sm-12\">\n            {\n              comments.map(comment => {\n                let date = comment.date;\n                if (date) {\n                  let d = new Date(date.toString());\n                  date = d.toDateString();\n                }\n                else date = 'No Date';\n\n                return (\n                  <>\n                    <div className=\"panel panel-default\" key={comment.id}>\n                      <div className=\"panel-body\">\n                        {comment.body} [{date}]\n                      </div>\n                    </div>\n                  </>\n                );\n              }\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  )\n};\n\nexport const CommentCreate = () => {\n  let history = useHistory();\n  let dispatch = useDispatch();\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  let { id } = useParams();\n\n  let saveData = (data) => {\n\n    let comment = { body: data.title, date: new Date() };\n\n    dispatch({\n      type: \"ADD_COMMENT\", payload: { postId: id, data: comment }\n    })\n\n    history.goBack();\n  }\n\n\n\n  const onSubmit = data => {\n    saveData(data);\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n\n        <div className=\"col-md-6\">\n          <div className=\"widget-area no-padding blank\">\n            <div className=\"status-upload\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <input type=\"text\" placeholder=\"Write your comment here\" name=\"title\" ref={register({ required: true })} className=\"form-control\" />\n                <input type=\"submit\" className=\"btn btn-primary btn-block\" />\n              </form>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    </>\n  )\n};\n\nexport const PostDetail = (props) => {\n\n  let { id } = useParams();\n\n  let dispatch = useDispatch();\n\n  let fetchData = (id) => {\n    dispatch({ type: \"FETCH_POST_DETAIL\", payload: id });\n  }\n\n  useEffect(() => {\n    fetchData(id);\n  }, [])\n\n  const post = useSelector(state => {\n    return state.posts.selectedPost;\n  });\n\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <div align=\"left\" className=\"col-md-10 blogShort\" id={id}>\n        <h2>{post.title}</h2>\n        <img src={post.imgUrl} style={{ height: \"50px\", width: \"50px\" }} alt=\"post img\" className=\"pull-left thumb margin10 img-thumbnail\"></img>\n        <article><p>{post.articleText}</p></article>\n        <a className=\"btn btn-blog pull-right marginBottom10\" href={post.readMoreUrl}>READ MORE</a>\n      </div>\n      <div>\n        <h4>Comments</h4>\n        <Link className=\"btn btn-blog pull-right\" to={`${match.url}/comments`}>Show comments</Link> &nbsp;\n        <Link className=\"btn btn-blog pull-right\" to={`${match.url}/add-comment`}>Add comment</Link>\n        <Switch>\n          <Route path={`${match.path}/comments`} component={Comments}></Route>\n          <Route path={`${match.path}/add-comment`} component={CommentCreate}></Route>\n        </Switch>\n      </div>\n    </>\n  )\n};\n\nexport const Posts = () => {\n  let dispatch = useDispatch();\n\n  const posts = useSelector(state => {\n    return state.posts.postList;\n  });\n\n  let fetchData = () => {\n    dispatch({ type: \"FETCH_POSTS\" });\n    dispatch({ type: \"CLEAR_SELECTION\" });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div id=\"blog\" className=\"row\">\n        {\n          posts.map(p => <PostSummary {...p} key={p.id} />)\n        }\n        <div className=\"col-md-12 gap10\"></div>\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}